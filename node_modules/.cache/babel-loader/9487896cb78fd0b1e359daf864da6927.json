{"ast":null,"code":"import _objectWithoutProperties from \"/home/nass/Bureau/OC/portfolio_nassim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/nass/Bureau/OC/portfolio_nassim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/nass/Bureau/OC/portfolio_nassim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/nass/Bureau/OC/portfolio_nassim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/nass/Bureau/OC/portfolio_nassim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var sideAxis = getSideAxis(placement);\n  var alignmentAxis = getAlignmentAxis(placement);\n  var alignLength = getAxisLength(alignmentAxis);\n  var side = getSide(placement);\n  var isVertical = sideAxis === 'y';\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n          validMiddleware = middleware.filter(Boolean);\n          _context.next = 4;\n          return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n        case 4:\n          rtl = _context.sent;\n          _context.next = 7;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 7:\n          rects = _context.sent;\n          _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n          statefulPlacement = placement;\n          middlewareData = {};\n          resetCount = 0;\n          i = 0;\n        case 13:\n          if (!(i < validMiddleware.length)) {\n            _context.next = 46;\n            break;\n          }\n          _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n          _context.next = 17;\n          return fn({\n            x: x,\n            y: y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData,\n            rects: rects,\n            platform: platform,\n            elements: {\n              reference: reference,\n              floating: floating\n            }\n          });\n        case 17:\n          _yield$fn = _context.sent;\n          nextX = _yield$fn.x;\n          nextY = _yield$fn.y;\n          data = _yield$fn.data;\n          reset = _yield$fn.reset;\n          x = nextX != null ? nextX : x;\n          y = nextY != null ? nextY : y;\n          middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n          if (!(reset && resetCount <= 50)) {\n            _context.next = 43;\n            break;\n          }\n          resetCount++;\n          if (!(typeof reset === 'object')) {\n            _context.next = 41;\n            break;\n          }\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n          if (!reset.rects) {\n            _context.next = 38;\n            break;\n          }\n          if (!(reset.rects === true)) {\n            _context.next = 36;\n            break;\n          }\n          _context.next = 33;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 33:\n          _context.t0 = _context.sent;\n          _context.next = 37;\n          break;\n        case 36:\n          _context.t0 = reset.rects;\n        case 37:\n          rects = _context.t0;\n        case 38:\n          _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n          x = _computeCoordsFromPla2.x;\n          y = _computeCoordsFromPla2.y;\n        case 41:\n          i = -1;\n          return _context.abrupt(\"continue\", 43);\n        case 43:\n          i++;\n          _context.next = 13;\n          break;\n        case 46:\n          return _context.abrupt(\"return\", {\n            x: x,\n            y: y,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData\n          });\n        case 47:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          if (options === void 0) {\n            options = {};\n          }\n          x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n          _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n          paddingObject = getPaddingObject(padding);\n          altContext = elementContext === 'floating' ? 'reference' : 'floating';\n          element = elements[altBoundary ? altContext : elementContext];\n          _context10.t0 = rectToClientRect;\n          _context10.t1 = platform;\n          _context10.next = 10;\n          return platform.isElement == null ? void 0 : platform.isElement(element);\n        case 10:\n          _context10.t2 = _await$platform$isEle = _context10.sent;\n          if (!(_context10.t2 != null)) {\n            _context10.next = 15;\n            break;\n          }\n          _context10.t3 = _await$platform$isEle;\n          _context10.next = 16;\n          break;\n        case 15:\n          _context10.t3 = true;\n        case 16:\n          if (!_context10.t3) {\n            _context10.next = 20;\n            break;\n          }\n          _context10.t4 = element;\n          _context10.next = 26;\n          break;\n        case 20:\n          _context10.t5 = element.contextElement;\n          if (_context10.t5) {\n            _context10.next = 25;\n            break;\n          }\n          _context10.next = 24;\n          return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n        case 24:\n          _context10.t5 = _context10.sent;\n        case 25:\n          _context10.t4 = _context10.t5;\n        case 26:\n          _context10.t6 = _context10.t4;\n          _context10.t7 = boundary;\n          _context10.t8 = rootBoundary;\n          _context10.t9 = strategy;\n          _context10.t10 = {\n            element: _context10.t6,\n            boundary: _context10.t7,\n            rootBoundary: _context10.t8,\n            strategy: _context10.t9\n          };\n          _context10.next = 33;\n          return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n        case 33:\n          _context10.t11 = _context10.sent;\n          clippingClientRect = (0, _context10.t0)(_context10.t11);\n          rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n            x: x,\n            y: y\n          }) : rects.reference;\n          _context10.next = 38;\n          return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n        case 38:\n          offsetParent = _context10.sent;\n          _context10.next = 41;\n          return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n        case 41:\n          if (!_context10.sent) {\n            _context10.next = 50;\n            break;\n          }\n          _context10.next = 44;\n          return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n        case 44:\n          _context10.t13 = _context10.sent;\n          if (_context10.t13) {\n            _context10.next = 47;\n            break;\n          }\n          _context10.t13 = {\n            x: 1,\n            y: 1\n          };\n        case 47:\n          _context10.t12 = _context10.t13;\n          _context10.next = 51;\n          break;\n        case 50:\n          _context10.t12 = {\n            x: 1,\n            y: 1\n          };\n        case 51:\n          offsetScale = _context10.t12;\n          _context10.t14 = rectToClientRect;\n          if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n            _context10.next = 59;\n            break;\n          }\n          _context10.next = 56;\n          return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n            rect: rect,\n            offsetParent: offsetParent,\n            strategy: strategy\n          });\n        case 56:\n          _context10.t15 = _context10.sent;\n          _context10.next = 60;\n          break;\n        case 59:\n          _context10.t15 = rect;\n        case 60:\n          _context10.t16 = _context10.t15;\n          elementClientRect = (0, _context10.t14)(_context10.t16);\n          return _context10.abrupt(\"return\", {\n            top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n            bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n            left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n            right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n          });\n        case 63:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _objectSpread3, _ref4;\n        var x, y, placement, rects, platform, elements, middlewareData, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements, middlewareData = state.middlewareData; // Since `element` is required, we don't Partial<> the type.\n              _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n              if (!(element == null)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", {});\n            case 4:\n              paddingObject = getPaddingObject(padding);\n              coords = {\n                x: x,\n                y: y\n              };\n              axis = getAlignmentAxis(placement);\n              length = getAxisLength(axis);\n              _context2.next = 10;\n              return platform.getDimensions(element);\n            case 10:\n              arrowDimensions = _context2.sent;\n              isYAxis = axis === 'y';\n              minProp = isYAxis ? 'top' : 'left';\n              maxProp = isYAxis ? 'bottom' : 'right';\n              clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n              endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n              startDiff = coords[axis] - rects.reference[axis];\n              _context2.next = 19;\n              return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n            case 19:\n              arrowOffsetParent = _context2.sent;\n              clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n              _context2.t0 = !clientSize;\n              if (_context2.t0) {\n                _context2.next = 26;\n                break;\n              }\n              _context2.next = 25;\n              return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n            case 25:\n              _context2.t0 = !_context2.sent;\n            case 26:\n              if (!_context2.t0) {\n                _context2.next = 28;\n                break;\n              }\n              clientSize = elements.floating[clientProp] || rects.floating[length];\n            case 28:\n              centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n              // centered, modify the padding so that it is centered.\n              largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n              minPadding = min(paddingObject[minProp], largestPossiblePadding);\n              maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n              // point is outside the floating element's bounds.\n              min$1 = minPadding;\n              max = clientSize - arrowDimensions[length] - maxPadding;\n              center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n              offset = clamp(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n              // to point to nothing for an aligned placement, adjust the offset of the\n              // floating element itself. To ensure `shift()` continues to take action,\n              // a single reset is performed when this is true.\n              shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n              alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n              return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] + alignmentOffset), _defineProperty(_ref4, \"data\", _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, axis, offset), _defineProperty(_objectSpread3, \"centerOffset\", center - offset - alignmentOffset), _objectSpread3), shouldAddOffset && {\n                alignmentOffset: alignmentOffset\n              })), _defineProperty(_ref4, \"reset\", shouldAddOffset), _ref4));\n            case 39:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements$1, overflow, currentIndex, currentPlacement, alignmentSides, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n              _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? placements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n              placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n              _context3.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context3.sent;\n              currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n              currentPlacement = placements$1[currentIndex];\n              if (!(currentPlacement == null)) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\", {});\n            case 10:\n              _context3.t0 = getAlignmentSides;\n              _context3.t1 = currentPlacement;\n              _context3.t2 = rects;\n              _context3.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              _context3.t3 = _context3.sent;\n              alignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n              if (!(placement !== currentPlacement)) {\n                _context3.next = 19;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                reset: {\n                  placement: placements$1[0]\n                }\n              });\n            case 19:\n              currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n              allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                placement: currentPlacement,\n                overflows: currentOverflows\n              }]);\n              nextPlacement = placements$1[currentIndex + 1]; // There are more placements to check.\n              if (!nextPlacement) {\n                _context3.next = 24;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 24:\n              placementsSortedByMostSpace = allOverflows.map(function (d) {\n                var alignment = getAlignment(d.placement);\n                return [d.placement, alignment && crossAxis ?\n                // Check along the mainAxis and main crossAxis side.\n                d.overflows.slice(0, 2).reduce(function (acc, v) {\n                  return acc + v;\n                }, 0) :\n                // Check only the mainAxis.\n                d.overflows[0], d.overflows];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              });\n              placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                return d[2].slice(0,\n                // Aligned placements should not check their opposite crossAxis\n                // side.\n                getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                  return v <= 0;\n                });\n              });\n              resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n              if (!(resetPlacement !== placement)) {\n                _context3.next = 29;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 29:\n              return _context3.abrupt(\"return\", {});\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$arrow, _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _sides, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n              _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2); // If a reset by the arrow was caused due to an alignment offset being\n              // added, we should skip any logic now since `flip()` has already done its\n              // work.\n              // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n              if (!((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\", {});\n            case 4:\n              side = getSide(placement);\n              isBasePlacement = getSide(initialPlacement) === initialPlacement;\n              _context4.next = 8;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 8:\n              rtl = _context4.sent;\n              fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n              if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n              }\n              placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n              _context4.next = 14;\n              return detectOverflow(state, detectOverflowOptions);\n            case 14:\n              overflow = _context4.sent;\n              overflows = [];\n              overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n              if (checkMainAxis) {\n                overflows.push(overflow[side]);\n              }\n              if (checkCrossAxis) {\n                _sides = getAlignmentSides(placement, rects, rtl);\n                overflows.push(overflow[_sides[0]], overflow[_sides[1]]);\n              }\n              overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                placement: placement,\n                overflows: overflows\n              }]);\n\n              // One or more sides is overflowing.\n              if (overflows.every(function (side) {\n                return side <= 0;\n              })) {\n                _context4.next = 37;\n                break;\n              }\n              nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n              nextPlacement = placements[nextIndex];\n              if (!nextPlacement) {\n                _context4.next = 25;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  index: nextIndex,\n                  overflows: overflowsData\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 25:\n              // First, find the candidates that fit on the mainAxis side of overflow,\n              // then find the placement that fits the best on the main crossAxis side.\n              resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                return d.overflows[0] <= 0;\n              }).sort(function (a, b) {\n                return a.overflows[1] - b.overflows[1];\n              })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n              if (resetPlacement) {\n                _context4.next = 35;\n                break;\n              }\n              _context4.t0 = fallbackStrategy;\n              _context4.next = _context4.t0 === 'bestFit' ? 30 : _context4.t0 === 'initialPlacement' ? 33 : 35;\n              break;\n            case 30:\n              _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                return [d.placement, d.overflows.filter(function (overflow) {\n                  return overflow > 0;\n                }).reduce(function (acc, overflow) {\n                  return acc + overflow;\n                }, 0)];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              })[0]) == null ? void 0 : _overflowsData$map$so[0];\n              if (_placement) {\n                resetPlacement = _placement;\n              }\n              return _context4.abrupt(\"break\", 35);\n            case 33:\n              resetPlacement = initialPlacement;\n              return _context4.abrupt(\"break\", 35);\n            case 35:\n              if (!(placement !== resetPlacement)) {\n                _context4.next = 37;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 37:\n              return _context4.abrupt(\"return\", {});\n            case 38:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              rects = state.rects;\n              _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n              _context5.t0 = strategy;\n              _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n              break;\n            case 5:\n              _context5.next = 7;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                elementContext: 'reference'\n              }));\n            case 7:\n              overflow = _context5.sent;\n              offsets = getSideOffsets(overflow, rects.reference);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  referenceHiddenOffsets: offsets,\n                  referenceHidden: isAnySideFullyClipped(offsets)\n                }\n              });\n            case 10:\n              _context5.next = 12;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                altBoundary: true\n              }));\n            case 12:\n              _overflow = _context5.sent;\n              _offsets = getSideOffsets(_overflow, rects.floating);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  escapedOffsets: _offsets,\n                  escaped: isAnySideFullyClipped(_offsets)\n                }\n              });\n            case 15:\n              return _context5.abrupt(\"return\", {});\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              getBoundingClientRect = function _getBoundingClientRec() {\n                // There are two rects and they are disjoined.\n                if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                  // Find the first rect in which the point is fully inside.\n                  return clientRects.find(function (rect) {\n                    return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                  }) || fallback;\n                }\n\n                // There are 2 or more connected rects.\n                if (clientRects.length >= 2) {\n                  if (getSideAxis(placement) === 'y') {\n                    var firstRect = clientRects[0];\n                    var lastRect = clientRects[clientRects.length - 1];\n                    var isTop = getSide(placement) === 'top';\n                    var _top = firstRect.top;\n                    var _bottom = lastRect.bottom;\n                    var _left = isTop ? firstRect.left : lastRect.left;\n                    var _right = isTop ? firstRect.right : lastRect.right;\n                    var _width = _right - _left;\n                    var _height = _bottom - _top;\n                    return {\n                      top: _top,\n                      bottom: _bottom,\n                      left: _left,\n                      right: _right,\n                      width: _width,\n                      height: _height,\n                      x: _left,\n                      y: _top\n                    };\n                  }\n                  var isLeftSide = getSide(placement) === 'left';\n                  var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.right;\n                  })));\n                  var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.left;\n                  })));\n                  var measureRects = clientRects.filter(function (rect) {\n                    return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                  });\n                  var top = measureRects[0].top;\n                  var bottom = measureRects[measureRects.length - 1].bottom;\n                  var left = minLeft;\n                  var right = maxRight;\n                  var width = right - left;\n                  var height = bottom - top;\n                  return {\n                    top: top,\n                    bottom: bottom,\n                    left: left,\n                    right: right,\n                    width: width,\n                    height: height,\n                    x: left,\n                    y: top\n                  };\n                }\n                return fallback;\n              };\n              placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n              // ClientRect's bounds, despite the event listener being triggered. A\n              // padding of 2 seems to handle this issue.\n              _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n              _context6.t0 = Array;\n              _context6.next = 6;\n              return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n            case 6:\n              _context6.t1 = _context6.sent;\n              if (_context6.t1) {\n                _context6.next = 9;\n                break;\n              }\n              _context6.t1 = [];\n            case 9:\n              _context6.t2 = _context6.t1;\n              nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n              clientRects = getRectsByLine(nativeClientRects);\n              fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n              paddingObject = getPaddingObject(padding);\n              _context6.next = 16;\n              return platform.getElementRects({\n                reference: {\n                  getBoundingClientRect: getBoundingClientRect\n                },\n                floating: elements.floating,\n                strategy: strategy\n              });\n            case 16:\n              resetRects = _context6.sent;\n              if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                _context6.next = 19;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                reset: {\n                  rects: resetRects\n                }\n              });\n            case 19:\n              return _context6.abrupt(\"return\", {});\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          placement = state.placement, platform = state.platform, elements = state.elements;\n          _context11.next = 3;\n          return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n        case 3:\n          rtl = _context11.sent;\n          side = getSide(placement);\n          alignment = getAlignment(placement);\n          isVertical = getSideAxis(placement) === 'y';\n          mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n          crossAxisMulti = rtl && isVertical ? -1 : 1;\n          rawValue = evaluate(options, state); // eslint-disable-next-line prefer-const\n          _ref6 = typeof rawValue === 'number' ? {\n            mainAxis: rawValue,\n            crossAxis: 0,\n            alignmentAxis: null\n          } : _objectSpread({\n            mainAxis: 0,\n            crossAxis: 0,\n            alignmentAxis: null\n          }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n          if (alignment && typeof alignmentAxis === 'number') {\n            crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n          }\n          return _context11.abrupt(\"return\", isVertical ? {\n            x: crossAxis * crossAxisMulti,\n            y: mainAxis * mainAxisMulti\n          } : {\n            x: mainAxis * mainAxisMulti,\n            y: crossAxis * crossAxisMulti\n          });\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              x = state.x, y = state.y;\n              _context7.next = 3;\n              return convertValueToCoords(state, options);\n            case 3:\n              diffCoords = _context7.sent;\n              return _context7.abrupt(\"return\", {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n              });\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread4;\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, crossAxis, mainAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement;\n              _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                fn: function fn(_ref) {\n                  var x = _ref.x,\n                    y = _ref.y;\n                  return {\n                    x: x,\n                    y: y\n                  };\n                }\n              } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n              coords = {\n                x: x,\n                y: y\n              };\n              _context8.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context8.sent;\n              crossAxis = getSideAxis(getSide(placement));\n              mainAxis = getOppositeAxis(crossAxis);\n              mainAxisCoord = coords[mainAxis];\n              crossAxisCoord = coords[crossAxis];\n              if (checkMainAxis) {\n                minSide = mainAxis === 'y' ? 'top' : 'left';\n                maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                _min = mainAxisCoord + overflow[minSide];\n                _max = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = clamp(_min, mainAxisCoord, _max);\n              }\n              if (checkCrossAxis) {\n                _minSide = crossAxis === 'y' ? 'top' : 'left';\n                _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                _min2 = crossAxisCoord + overflow[_minSide];\n                _max2 = crossAxisCoord - overflow[_maxSide];\n                crossAxisCoord = clamp(_min2, crossAxisCoord, _max2);\n              }\n              limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, mainAxis, mainAxisCoord), _defineProperty(_objectSpread4, crossAxis, crossAxisCoord), _objectSpread4)));\n              return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                data: {\n                  x: limitedCoords.x - x,\n                  y: limitedCoords.y - y\n                }\n              }));\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n      var x = state.x,\n        y = state.y,\n        placement = state.placement,\n        rects = state.rects,\n        middlewareData = state.middlewareData;\n      var _evaluate6 = evaluate(options, state),\n        _evaluate6$offset = _evaluate6.offset,\n        offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n        _evaluate6$mainAxis = _evaluate6.mainAxis,\n        checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n        _evaluate6$crossAxis = _evaluate6.crossAxis,\n        checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var crossAxis = getSideAxis(placement);\n      var mainAxis = getOppositeAxis(crossAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, isYAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n              _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n              _context9.next = 4;\n              return detectOverflow(state, detectOverflowOptions);\n            case 4:\n              overflow = _context9.sent;\n              side = getSide(placement);\n              alignment = getAlignment(placement);\n              isYAxis = getSideAxis(placement) === 'y';\n              _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n              if (!(side === 'top' || side === 'bottom')) {\n                _context9.next = 28;\n                break;\n              }\n              heightSide = side;\n              _context9.t0 = alignment;\n              _context9.next = 14;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 14:\n              if (!_context9.sent) {\n                _context9.next = 18;\n                break;\n              }\n              _context9.t1 = 'start';\n              _context9.next = 19;\n              break;\n            case 18:\n              _context9.t1 = 'end';\n            case 19:\n              _context9.t2 = _context9.t1;\n              if (!(_context9.t0 === _context9.t2)) {\n                _context9.next = 24;\n                break;\n              }\n              _context9.t3 = 'left';\n              _context9.next = 25;\n              break;\n            case 24:\n              _context9.t3 = 'right';\n            case 25:\n              widthSide = _context9.t3;\n              _context9.next = 30;\n              break;\n            case 28:\n              widthSide = side;\n              heightSide = alignment === 'end' ? 'top' : 'bottom';\n            case 30:\n              overflowAvailableHeight = height - overflow[heightSide];\n              overflowAvailableWidth = width - overflow[widthSide];\n              noShift = !state.middlewareData.shift;\n              availableHeight = overflowAvailableHeight;\n              availableWidth = overflowAvailableWidth;\n              if (isYAxis) {\n                maximumClippingWidth = width - overflow.left - overflow.right;\n                availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n              } else {\n                maximumClippingHeight = height - overflow.top - overflow.bottom;\n                availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n              }\n              if (noShift && !alignment) {\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                if (isYAxis) {\n                  availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                } else {\n                  availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                }\n              }\n              _context9.next = 39;\n              return apply(_objectSpread(_objectSpread({}, state), {}, {\n                availableWidth: availableWidth,\n                availableHeight: availableHeight\n              }));\n            case 39:\n              _context9.next = 41;\n              return platform.getDimensions(elements.floating);\n            case 41:\n              nextDimensions = _context9.sent;\n              if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                _context9.next = 44;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                reset: {\n                  rects: true\n                }\n              });\n            case 44:\n              return _context9.abrupt(\"return\", {});\n            case 45:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","getSideAxis","getAlignmentAxis","getAxisLength","getSide","getAlignment","evaluate","getPaddingObject","rectToClientRect","min","clamp","placements","getAlignmentSides","getOppositeAlignmentPlacement","getOppositePlacement","getExpandedPlacements","getOppositeAxisPlacements","sides","max","getOppositeAxis","computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","x","width","commonY","height","commonAlign","coords","computePosition","_ref2","_asyncToGenerator","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","rects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","_validMiddleware$i","fn","_yield$fn","nextX","nextY","data","_computeCoordsFromPla2","_callee$","_context","filter","Boolean","isRTL","getElementRects","initialPlacement","elements","_objectSpread","_defineProperty","t0","_x","_x2","_x3","apply","arguments","detectOverflow","_x4","_x5","_detectOverflow","_callee10","state","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","padding","paddingObject","altContext","element","clippingClientRect","rect","offsetParent","offsetScale","elementClientRect","_callee10$","_context10","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","top","bottom","left","right","arrow","_callee2","_objectSpread3","_ref4","_ref3","_ref3$padding","axis","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","_callee2$","_context2","getDimensions","getPlacementList","alignment","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","concat","_toConsumableArray","autoPlacement","_callee3","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","_evaluate$crossAxis","crossAxis","_evaluate$allowedPlac","_evaluate$autoAlignme","detectOverflowOptions","placements$1","overflow","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","placementsThatFitOnEachSide","resetPlacement","_callee3$","_context3","_objectWithoutProperties","_excluded","undefined","index","overflows","map","reduce","acc","sort","b","every","flip","_callee4","_middlewareData$arrow","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","checkMainAxis","_evaluate2$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","flipAlignment","isBasePlacement","fallbackPlacements","overflowsData","_sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","_placement","_callee4$","_context4","mainAxis","_excluded2","getSideOffsets","isAnySideFullyClipped","some","hide","_callee5","_evaluate3","_evaluate3$strategy","offsets","_overflow","_offsets","_callee5$","_context5","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","_callee6","_evaluate4","_evaluate4$padding","nativeClientRects","clientRects","fallback","getBoundingClientRect","resetRects","_callee6$","_context6","_getBoundingClientRec","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","from","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","_callee11$","_context11","includes","_callee7","diffCoords","_callee7$","_context7","shift","_callee8","_objectSpread4","_evaluate5","_evaluate5$mainAxis","_evaluate5$crossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","_min","_max","_minSide","_maxSide","_min2","_max2","limitedCoords","_callee8$","_context8","_excluded4","limitShift","_ref5","_evaluate6","_evaluate6$offset","_evaluate6$mainAxis","_evaluate6$crossAxis","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","_callee9","_evaluate7","_evaluate7$apply","_rects$floating","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","_callee9$","_context9","_excluded5"],"sources":["/home/nass/Bureau/OC/portfolio_nassim/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}